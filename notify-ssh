#!/bin/bash
# Display notify-send notifications via remote SSH


PROGRAM=${0##*/}

# NOTE: replace ??? with the username you'd like to default to as root
if [[ $USER = root ]]; then
    user=???
else
    user=$USER
fi


# pgrep for $user owned dbus-daemon process then grep for the address
getaddress(){
    address=$(pgrep --euid "$user" --full --list-full --newest 'dbus-daemon.*--address=' | grep -oP '(?<=--address=)[^ ]+')

    if [[ -n $address ]]; then
        export DBUS_SESSION_BUS_ADDRESS=$address
    fi
}

# grep through ps output from all $user owned processes for the dbus-daemon address
# getaddress(){
#     # address=$(ps -u "$user" -o command= | grep -E '^dbus-daemon.*--address=unix:abstract=/tmp/dbus-[A-Za-z0-9]{10}' | tail -c35)
#     address=$(ps -u "$user" -o command= | awk '{ match($0, /^dbus-daemon.+--address=([^ ]+)/, x); { a=x[1] } }; ( length(a)>0 ) {print a; exit}')

#     if [[ -n $address ]]; then
#         export DBUS_SESSION_BUS_ADDRESS=$address
#     fi
# }

# scan through environ of all $user processes
# getaddress(){
#     local pid
#     local pidlist=( $(pgrep -u "$user" 2>/dev/null) )

#     if (( ${#pidlist[@]} == 0 )); then
#         echo "$PROGRAM: unable to detect pids in use by '$user'" >&2
#         exit 1
#     fi

#     for pid in "${pidlist[@]}"; do
#         address=$(grep -oPz '(?<=DBUS_SESSION_BUS_ADDRESS=).*' "/proc/$pid/environ" 2>/dev/null)
#         if [[ -n $address ]]; then
#             export DBUS_SESSION_BUS_ADDRESS=$address
#             break
#         fi
#     done
# }

notify(){
    if [[ $USER = root ]]; then
        local tempdir=$(mktemp -d)
        local pipefile="$tempdir/$RANDOM"
        trap "rm -rf '$tempdir'; exit 1" HUP INT QUIT TERM
        mkfifo -m 0600 "$pipefile"
        sudo -u "$user" notify-send "$@" >"$pipefile" 2>&1 &
        msg=$(< "$pipefile")
        [[ $msg = 'Sessions still open, not unmounting' ]] || echo "$msg"
        rm -rf "$tempdir"
    else
        notify-send "$@"
    fi
}


if [[ -z $DBUS_SESSION_BUS_ADDRESS ]]; then
    getaddress
fi

if [[ -z $DBUS_SESSION_BUS_ADDRESS ]]; then
    echo "$PROGRAM: Unable to detect DBUS_SESSION_BUS_ADDRESS for '$user'" >&2
    exit 1
else
    notify "$@"
fi
