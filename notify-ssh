#!/bin/bash
# Display notify-send notifications via remote SSH


PROGRAM=${0##*/}

# NOTE: replace ??? with the username you'd like to default to as root
if [[ $USER = root ]]; then
    user=???
else
    user=$USER
fi


# pgrep for $user owned dbus-daemon process then grep for the address
getaddress(){
    address=$(pgrep --euid "$user" --full --list-full --newest 'dbus-daemon.*--address=' | grep -oP '(?<=--address=)[^ ]+')

    if [[ -n $address ]]; then
        export DBUS_SESSION_BUS_ADDRESS=$address
    fi
}

# grep through ps output from all $user owned processes for the dbus-daemon address
# getaddress(){
#     address=$(ps -u "$USER" -o command= | grep -E '^dbus-daemon.*--address=unix:abstract=/tmp/dbus-[A-Za-z0-9]{10}' | tail -c35)
#     if [[ -n $address ]]; then
#         export DBUS_SESSION_BUS_ADDRESS=$address
#     fi
# }

# scan through environ of all $user processes
# getaddress(){
#     pidlist=$(pgrep -u "$USER" 2>/dev/null)
#     if [[ -n $pidlist ]]; then
#         for pid in $pidlist; do
#             address=$(grep -oPz '(?<=DBUS_SESSION_BUS_ADDRESS=).*' "/proc/$pid/environ" 2>/dev/null)
#             if [[ -n $address ]]; then
#                 export DBUS_SESSION_BUS_ADDRESS=$address
#                 break
#             fi
#         done
#     else
#         echo "${0##*/}: unable to detect pids in use by '$USER'" >&2
#         exit 1
#     fi
# }

if [[ -z $DBUS_SESSION_BUS_ADDRESS ]]; then
    getaddress
fi

if [[ -z $DBUS_SESSION_BUS_ADDRESS ]]; then
    echo "$PROGRAM: Unable to detect DBUS_SESSION_BUS_ADDRESS for '$user'" >&2
    exit 1
else
    notify-send "$@"
fi
